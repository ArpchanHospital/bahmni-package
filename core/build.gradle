group 'org.bahmni.deployment'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7

project.ext.tomcatVersion = "8.0.12";

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'http://mavenrepo.openmrs.org/nexus/content/repositories/public'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories'
    }
}

dependencies {
    compile "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}",
            "org.apache.tomcat:tomcat-jasper:${tomcatVersion}",
            "org.apache.tomcat:tomcat-jasper-el:${tomcatVersion}",
            "org.apache.tomcat:tomcat-jsp-api:${tomcatVersion}"
}

jar {
    manifest {
        attributes 'Main-Class': "org.bahmni.openmrs.launch.Main"
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

task launch(dependsOn: ['build'], type: JavaExec) {
    def properties = new Properties()
    properties.setProperty("SERVER_PORT", "8080")
    properties.setProperty("BASE_DIR", "${buildDir}")
    properties.setProperty("CONTEXT_PATH", "openmrs")
    properties.setProperty("WAR_DIRECTORY", "${buildDir}/openmrs")

    main "org.bahmni.openmrs.launch.Main"
    classpath sourceSets.main.runtimeClasspath
    environment properties
}

task execute(dependsOn: 'build', type: JavaExec) {
    main = "org.bahmni.openmrs.launch.Main"
    classpath = sourceSets.main.runtimeClasspath
    standardOutput = System.out
}

configurations {
    all*.exclude(group: 'com.sun.jdmk', module: 'jmxtools')
    all*.exclude(group: 'com.sun.jmx', module: 'jmxri')
    all*.exclude(group: 'javax.jms', module: 'jms')
    all*.exclude(group: 'javax.mail', module: 'mail')
}
