plugins {
    id "nebula.os-package" version "2.2.6"
    id "de.undercouch.download" version "2.0.0"
}

import de.undercouch.gradle.tasks.download.Download

group 'org.bahmni.emr'
version project.bahmniRelease

def rpmOpenmrsVersion = project.openmrsVersion.replaceAll('-','.')

apply plugin: 'rpm'

task extractOmods(type: Copy) {
    from zipTree(file("${projectDir}/resources/distro-"+project.bahmniRelease+"-SNAPSHOT-distro.zip"))
    into file("${buildDir}/distro/")
}

task extractBahmniEnvironment(type: Copy) {
    from zipTree(file("${projectDir}/resources/bahmni-environment.zip"))
    into file("${buildDir}")
}

task downloadAtomFeedClient(type: Download) {
    src 'https://oss.sonatype.org/content/repositories/releases/org/ict4h/atomfeed-client/'+project.atomFeedClient+'/atomfeed-client-'+project.atomFeedClient+'.jar'
    dest "${projectDir}/resources/"
}

downloadAtomFeedClient.onlyIf { !(new File("${projectDir}/resources/atomfeed-client-"+project.atomFeedClient+".jar").exists()) }

task dist(dependsOn: ['build', 'extractOmods','extractBahmniEnvironment','downloadAtomFeedClient'], type: Rpm) {
    packageName 'bahmni-emr'
    release System.getenv('GO_PIPELINE_COUNTER') ?: "1"
    arch NOARCH
    os LINUX
    user 'bahmni'

    into '/opt/openmrs'


    postInstall file("${projectDir}/scripts/postinstall.sh")
    preUninstall file("${projectDir}/scripts/preuninstall.sh")
    postUninstall file("${projectDir}/scripts/postuninstall.sh")

    from("${buildDir}/distro/distro-"+project.bahmniRelease+"-SNAPSHOT") {
        fileMode = 0755
        user 'bahmni'
        createDirectoryEntry = true
        into 'modules'
        include('addresshierarchy-*.omod')
        include('appframework-*.omod')
        include('bahmnicore-*.omod')
        include('bedmanagement-*.omod')
        include('calculation-*.omod')
        include('emrapi-*.omod')
        include('event-*.omod')
        include('htmlwidgets-*.omod')
        include('idgen-*.omod')
        include('idgen-webservices-*.omod')
        include('metadatamapping-*.omod')
        include('metadatasharing-*.omod')
        include('openmrs-atomfeed-*.omod')
        include('providermanagement-*.omod')
        include('reference-data-*.omod')
        include('reporting-*.omod')
        include('serialization.xstream-*.omod')
        include('uicommons-*.omod')
        include('uiframework-*.omod')
        include('uilibrary-*.omod')
        include('webservices.rest-*.omod')
        include('bacteriology-*.omod')
    }

    from("${projectDir}/resources/") {
        fileMode = 0755
        user 'bahmni'
        createDirectoryEntry = true
        into 'etc'
        include('bahmni-emr.conf')
        include('run-liquibase.sh')
        include('run-snapshot-liquibase.sh')
        include('atomfeed-client-*.jar')
        rename('atomfeed-client-'+project.atomFeedClient+'.jar', 'atomfeed-client.jar')
    }

    from("${projectDir}/resources/"){
        fileMode = 0755
        user 'bahmni'
        include('bahmnicore.properties')
    }

    from("${buildDir}/bahmni-environment/puppet/modules/bahmni_snapshot_migrations") {
        fileMode = 0755
        user 'bahmni'
        createDirectoryEntry = true
        into 'etc/migrations'
    }
}
